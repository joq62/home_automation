-module(ws_h).

-export([init/2]).
-export([websocket_init/1]).
-export([websocket_handle/2]).
-export([websocket_info/2]).


init(Req, Opts) ->
	{cowboy_websocket, Req, Opts}.

websocket_init(State) ->
    io:format("~p~n",[State]),
    NewState=lists:append(State,[{"varme_huset","off"},{"varme_lillstugan","off"},
	   {"lampor_huset","off"},{"lampor_lillstugan","off"}]),
 %   NewState=lists:append(State,[{<<"varme_huset">>,"off"},{<<"varme_lillstugan">>,"off"},
%	   {<<"lampor_huset">>,"off"},{<<"lampor_lillstugan">>,"off"}]),
    {ok, NewState}.

websocket_handle({text, Msg}, State) ->
    io:format("~p~n",[{?MODULE,?LINE,Msg}]),
    MsgStr=binary_to_list(Msg),
    io:format("~p~n",[{?MODULE,?LINE,MsgStr}]),
    [Function,ArgStr]=split_msg(MsgStr),  
    io:format("Function,ArgStr ~p~n",[{?MODULE,?LINE,Function,ArgStr}]),  
    ArgList=get_args(ArgStr),    
    io:format("ArgList~p~n",[{?MODULE,?LINE,ArgList}]),
    {NewState,Reply}= execute(Function,ArgList,State),
    {reply,Reply, NewState};


websocket_handle(_Data, State) ->
	{ok, State}.

websocket_info({send, Msg}, State) ->
	erlang:start_timer(1000, self(), <<"How' you doin'?">>),
	{reply, {text, Msg}, State};

websocket_info({timeout, _Ref, Msg}, State) ->
	erlang:start_timer(1000, self(), <<"How' you doin'?">>),
	{reply, {text, Msg}, State};
websocket_info(_Info, State) ->
	{ok, State}.
